/**
 * Module includes.
 *
 * The "moduleInclude" prologue code allows including an arbitrary code at the
 * beginning of the generated parser file. As an example, it can be the code
 * to require modules for corresponding AST nodes, or direct AST nodes
 * definitions.
 */

%{
  // Define AST node classes.
  class Node {}

  /* JS comments work here */
  class Binary extends Node {}
  class Primary extends Node {}

  // Can define callbacks for parse events here,
  // attaching to `yyparse` object.

  yyparse.onParseBegin = (string) => {
    console.log('Parsing:', string);
  };

  yyparse.onParseEnd = (value) => {
    console.log('Parsed:', value);
  };

%}

%%

E
  : E '+' T       { $$ = new Binary($1, $3, '+') }
  | T             { $$ = $1 }
  ;

T
  : T '*' F       { $$ = new Binary($1, $3, '*') }
  | F             { $$ = $1 }
  ;

F
  : 'id'          { $$ = new Primary($1) }
  | '(' E ')'     { $$ = $2 }
  ;